@{
    ViewData["Title"] = "Super Admin";
}
  <!-- Page Breadcrumb -->
<div class="page-breadcrumbs">
    <ul class="breadcrumb">
        <li>
            <i class="fa fa-home themeprimary"></i>
            @if (ViewBag.RoleID == 1)
            {
                <a href="/SuperAdmin/Index">Dashboard</a>
            }
            else if (ViewBag.RoleID == 2)
            {
                <a href="/ClientAdmin/Index">Dashboard</a>
            }
            else if (ViewBag.RoleID == 3)
            {
                <a href="/Manager/Index">Dashboard</a>
            }
            else
            {
                <a href="/Employee/I9categories">Dashboard</a>
            }
        </li>

        <li class="active">Pay Deposit Details</li>
    </ul>
</div>
<!-- /Page Breadcrumb -->
<!-- Page Header -->
<div class="page-header position-relative">
    <div class="header-title">
        <h1 class="themeprimary">
            Update Deposit Details
        </h1>
    </div>
    <!--Header Buttons-->
    <div class="header-buttons">
        <a class="sidebar-toggler" href="#">
            <i class="fa fa-arrows-h"></i>
        </a>
        <a class="refresh" id="refresh-toggler" href="">
            <i class="glyphicon glyphicon-refresh"></i>
        </a>
        <a class="fullscreen" id="fullscreen-toggler" href="#">
            <i class="glyphicon glyphicon-fullscreen"></i>
        </a>
    </div>
    <!--Header Buttons End-->
</div>
<!-- /Page Header -->
<!-- Page Body -->
<div class="page-body">
    <div class="row">
        <div class="col-lg-12 col-sm-12 col-xs-12">
            <div class="division-form margin-top-add padding-bottom-add">
                <form class="form-horizontal col-lg-12 col-sm-12 col-xs-12 deposit-form" role="form" method="post" action="/Onboarding/UpdateDepositDetails" novalidate="novalidate">
                    <input type="hidden" class="form-control" data-val="true" data-val-required="The Id field is required." id="Id" name="Id" value="15">
                    <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12 no-padding-left">
                        <div class="form-group col-sm-12">
                            <label for="inputEmail3" class="col-sm-6 control-label no-padding-right ">Bank Name : <sup style="color:red"><b>*</b></sup></label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" data-val="true" data-val-length="Bank name should not exceed more than 255 characters." data-val-length-max="255" data-val-required="Bank name is required." id="BankName" name="BankName" value="un bank of america ">
                                <span class="asterisk field-validation-valid" data-valmsg-for="BankName" data-valmsg-replace="true"></span>
                            </div>
                        </div>


                        <div class="form-group col-sm-12">
                            <label for="inputEmail3" class="col-sm-6 control-label no-padding-right ">U.S Bank Routing Number :<sup style="color:red"><b>*</b></sup></label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" data-val="true" data-val-length="Bank route number should not exceed more than 100 characters." data-val-length-max="100" data-val-required="Bank route number is required." id="BankRouteNumber" name="BankRouteNumber" value="75395148620">
                                <span class="asterisk field-validation-valid" data-valmsg-for="BankRouteNumber" data-valmsg-replace="true"></span>
                            </div>
                        </div>

                        <div class="form-group col-sm-12">
                            <label for="inputEmail3" class="col-sm-6 control-label no-padding-right ">U.S Bank AccountNumber : <sup style="color:red"><b>*</b></sup></label>
                            <div class="col-sm-6">
                                <input type="number" class="form-control" data-val="true" data-val-length="Account number should not exceed more than 100 numbers." data-val-length-max="100" data-val-required="Bank account number is required." id="BankAccountNumber" name="BankAccountNumber" value="93268514752">
                                <span class="asterisk field-validation-valid" data-valmsg-for="BankAccountNumber" data-valmsg-replace="true"></span>
                            </div>
                        </div>
                    </div>


                    @*<div class="col-lg-6 col-md-6 col-sm-12 col-xs-12 no-padding-left">
                        
                            <div class="form-group">
                                <label class="col-sm-6 col-md-4 col-lg-4 col-xs-12 col-md-offset-1 col-lg-offset-1 control-label no-padding-right">Account Type:<sup style="color:red"><b>*</b></sup></label>
                                <div class="col-sm-6">
                                    <select class="form-control" data-val="true" data-val-required="Account type is required." id="AccountType" name="AccountType">
                                        <option value="checking">Checking</option>
                                        <option value="saving" selected="selected">Saving</option>
                                    </select>
                                    <span class="asterisk field-validation-valid" data-valmsg-for="AccountType" data-valmsg-replace="true"></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6">
                            <div class="form-group">
                                <label class="col-sm-6 col-md-4 col-lg-4 col-xs-12 col-md-offset-1 col-lg-offset-1 control-label no-padding-right">Print Name:<sup style="color:red"><b>*</b></sup></label>
                                <div class="col-sm-6">
                                    <input type="text" class="form-control" data-val="true" data-val-length="Print name should not exceed more than 100 characters." data-val-length-max="100" data-val-required="Print name is required." id="PrintName" name="PrintName" value="jonathan">
                                    <span class="asterisk field-validation-valid" data-valmsg-for="PrintName" data-valmsg-replace="true"></span>
                                </div>
                            </div>
                        </div>*@
                    <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12 no-padding-left">
                        <div class="form-group col-sm-12">
                            <label class="col-sm-6 col-md-4 col-lg-4 col-xs-12 col-md-offset-2 col-lg-offset-2 control-label no-padding-right">Account Type:<sup style="color:red"><b>*</b></sup></label>
                            <div class="col-sm-6">
                                <select class="form-control" data-val="true" data-val-required="Account type is required." id="AccountType" name="AccountType">
                                    <option value="checking">Checking</option>
                                    <option value="saving" selected="selected">Saving</option>
                                </select>
                                <span class="asterisk field-validation-valid" data-valmsg-for="AccountType" data-valmsg-replace="true"></span>
                            </div>
                        </div>

                        <div class="form-group col-sm-12">
                            <label class="col-sm-6 col-md-4 col-lg-4 col-xs-12 col-md-offset-2 col-lg-offset-2 control-label no-padding-right">Print Name:<sup style="color:red"><b>*</b></sup></label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" data-val="true" data-val-length="Print name should not exceed more than 100 characters." data-val-length-max="100" data-val-required="Print name is required." id="PrintName" name="PrintName" value="jonathan">
                                <span class="asterisk field-validation-valid" data-valmsg-for="PrintName" data-valmsg-replace="true"></span>
                            </div>
                        </div>
                    </div>
                    


                        <hr class="location-hr">
                        <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12 text-center center-block">
                            <a href="/Onboarding/Deposit" class="btn btn-primary btn-md btnSearch">Submit</a>
                            <a href="/Onboarding/Deposit" class="btn btn-warning btn-md btnSearch">Cancel</a>
                        </div>
</form>
            </div>
        </div>


    </div>
</div>
<!-- /Page Body -->
<!--Modal-->
<div class="modal fade" id="formConfirm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width:370px;">
        <div class="modal-content">
            <div class="modal-header" style="background:transparent;">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h5 class="modal-title" id="frm_title">Delete Confirmation</h5>
            </div>
            <div class="modal-body" id="frm_body">Are you sure you want to delete this record ?</div>
            <div class="modal-footer" style="background:transparent;">
                <button type="button" class="btn btn-danger col-sm-2 pull-right" data-dismiss="modal" id="frm_cancel">No</button>
                <a href="#"><button style='margin-left:10px; margin-right:15px;' type="button" class="btn btn-primary col-sm-2 pull-right" id="frm_submit">Yes</button></a>

            </div>
        </div>
    </div>
</div>
<!--/Modal-->
<environment>
    <link href="~/assets/css/dataTables.bootstrap.css" rel="stylesheet" />
    <style>
        /*.table > tbody > tr > td, .table > tbody > tr > th, .table > tfoot > tr > td, .table > tfoot > tr > th, .table > thead > tr > td, .table > thead > tr > th {
            vertical-align: middle;
        }

            .table > tbody > tr > td a {
                margin: 3px;
            }

        .table > thead > tr > th {
            background-color: #c1c1c1;
        }

        .form-horizontal .form-group {
            margin-bottom: 8px;
        }

        .checkbox {
            text-align: center;
        }

        .table input[type=checkbox] ~ .text, .table input[type=radio] ~ .text {
            margin-right: 0px;
        }

        .checkbox, .radio {
            margin-top: 5px;
            margin-bottom: 5px;
        }
           .DTTT.btn-group{
            position:absolute !important;
            display: none !important;
        }*/
       
         .table > tbody > tr > td, .table > tbody > tr > th, .table > tfoot > tr > td, .table > tfoot > tr > th, .table > thead > tr > td, .table > thead > tr > th {
            vertical-align: middle;
            text-align: left;
        }

            .table > tbody > tr > td a {
                margin: 3px;
            }
             
        .table > thead > tr > th {
            background-color: #c1c1c1;
           
        }

        .form-horizontal .form-group {
            margin-bottom: 8px;
        }

        .checkbox {
            text-align: center;
        }

        .DTTT.btn-group {
            position: absolute !important;
            display: none !important;
        }
         .deposit-form label {text-align:left !Important;}
    </style>
</environment>
<environment>
    <!--Page Related Scripts-->
    <script src="~/assets/js/toastr/toastr.js"></script>
    <script src="~/assets/js/datatable/jquery.dataTables.min.js"></script>
    <script src="~/assets/js/datatable/ZeroClipboard.js"></script>
    <script src="~/assets/js/datatable/dataTables.tableTools.min.js"></script>
    <script src="~/assets/js/datatable/dataTables.bootstrap.min.js"></script>
    <script src="~/assets/js/datatable/datatables-init.js"></script>

    <script src="~/assets/js/bootbox/bootbox.js"></script>
    <script>
    $(function () {
    $('[data-toggle="tooltip"]').tooltip()
    })
    </script>
    @*<script>
        var ClientID = '@ViewBag.MasterClientID';
        var oTable1 = $('#simpledatatable').dataTable({
            "sDom": "Tflt<'row DTTTFooter'<'col-sm-6'i><'col-sm-6'p>>",
            "aLengthMenu": [
               [5, 10, 20, 50, 100, -1],
               [5, 10, 20, 50, 100, "All"]
            ],
            "iDisplayLength": 10,
            "oTableTools": {
                "aButtons": [
                    "copy", "csv", "xls", "pdf", "print"
                ],
                // "sSwfPath": "http://localhost:54505/assets/swf/copy_csv_xls_pdf.swf"//"assets/swf/copy_csv_xls_pdf.swf"
            },
            "language": {
                "search": "",
                "sLengthMenu": "_MENU_",
                "oPaginate": {
                    "sPrevious": "Prev",
                    "sNext": "Next"
                }
            },
            "aoColumns": [null, null, null, null, { "bSortable": false }, { "bSortable": false }, { "bSortable": false }],
            "aaSorting": []
        });*@
        @*$(document).ready(function(){
            $('.deletepopover').click(function () {
                $('.page-sidebar').css('z-index', '0');
                $('.navbar').css('z-index', '200');

            });
            $("#ddlMasterClient").prop("disabled", false);
            LoadGrid();
            if ('@TempData["Message"]' != null && '@TempData["Message"]' != "") { 
            ('@TempData["Message"]'); }
            if ('@TempData["errorMessage"]' != null && '@TempData["errorMessage"]' != "") {
                NotifyMessage('@TempData["errorMessage"]', 'top-right', '1800', 'warning', 'fa-warning', true);
            }
            if ('@TempData["PageNo"]' != null && '@TempData["PageNo"]' != "") {
                $('#tblClient_wrapper .dataTables_paginate li').removeClass('active');
                $('#tblClient_wrapper .dataTables_paginate li a').each(function () {
                    if ($(this).text() == '@TempData["PageNo"]') {
                        $(this).parent().addClass('active').click();
                    }
                });
            };
        });
        $('#ddlMasterClient').on('change', function () {
            ClientID = $("#ddlMasterClient :selected").val();
            var ClientName = $("#ddlMasterClient :selected").text();

            $.ajax({
                type: 'POST',
                url: '/Login/ChangeClientDetails',
                data: { DatabaseId: ClientID, ClientName: ClientName },
                success: function (data) {
                    LoadGrid();
                }
            });
        });

        $('#AddClient').on('click', function () {
            window.location.href = "/Administration/NewClient";
        });*@
       @*function LoadGrid() {
            $.ajax({
                type: 'GET',
                url: '/Administration/GetAllClients',
                async: false,
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                cache: false,
                callback: true,
                crossDomain: true,
                success: function (data) {
                     
                    oTable1.fnClearTable();
                    var count;
                    if (data != null && data != "Content not found") {
                        $.each(data, function (i, item) {
                            if (item.CreatedDate == null)
                                item.CreatedDate = new Date();

                            // Getting Date as MM/DD/YYYY Format.
                            var credate = new Date(item.CreatedDate);
                            var createdMonth = (credate.getMonth() + 1);
                            var createdMonthFinal = (createdMonth < 9 ? '0' + createdMonth : createdMonth);
                            var createdDate = credate.getDate();
                            var creatededDateFinal = (createdDate < 10 ? '0' + createdDate : createdDate);
                            var createddate = (createdMonthFinal + '-' + creatededDateFinal + '-' + credate.getFullYear());
                            //<thead><tr role="row"><th>Id #</th><th>Name</th><th>Contact Person</th><th>Contact Phone</th><th>Billing Address</th><th>Comments</th><th style="width:144px;">Actions</th></tr></thead>
                            var Edit = "<a href='#' onclick='EditClient(" + item.ClientID + ")' class='' data-toggle='modal' data-placement='top' data-original-title='Edit'><i class='fa fa-pencil-square-o editpopover'></i></a>";
                            var Delete = "<a href='#' onclick='DeleteClient(" + item.ClientID + ",\"" + item.ClientName + "\")' class='bootbox-confirm' data-toggle='modal' data-placement='top' data-original-title='Delete' ><i class='fa fa-trash-o deletepopover'></i> </a>";
                            count = oTable1.fnAddData([item.ClientID, item.ClientName, item.ContactPerson, item.ContactPhone, item.BillingAddress, item.Comments, Edit + "" + Delete]);
                        });
                    }
                    else {
                        if ('@TempData["errorMessage"]' != null && '@TempData["errorMessage"]' != "") {
                            NotifyMessage('@TempData["errorMessage"]', 'top-right', '1800', 'warning', 'fa-warning', true);
                        }
                        //if (ClientID == null || ClientID == "" || ClientID == "undefined") {
                        //    Notify("Please select the client.", 'top-right', '1500', 'warning', 'fa-warning', true);
                        //}
                    }
                },
                complete: function () {
                },
                error: function (jqXHR, exception) {
                    var msg = '';
                    if (jqXHR.status === 0) {
                        msg = 'Not connect.\n Verify Network.';
                    } else if (jqXHR.status == 404) {
                        msg = 'Requested page not found. [404]';
                    } else if (jqXHR.status == 500) {
                        msg = 'Internal Server Error [500].';
                    } else if (exception === 'parsererror') {
                        msg = 'Requested JSON parse failed.';
                    } else if (exception === 'timeout') {
                        msg = 'Time out error.';
                    } else if (exception === 'abort') {
                        msg = 'Ajax request aborted.';
                    } else {
                        msg = 'Uncaught Error.\n' + jqXHR.responseText;
                    }
                    Notify(msg, 'top-right', '3000', 'warning', 'fa-warning', true);
                }
            });
        }*@
      
        @*function EditClient(databaseId) {
            var PageNo = $('#tblClient_wrapper .dataTables_paginate li.active').text();
            window.location.href = "/Administration/EditClient?clientId=" + databaseId + "&PageNo=" + PageNo;

        }

        function NotifyMessage(message, position, timeout, theme, icon, closable) {
            toastr.options.positionClass = 'toast-' + position;
            toastr.options.extendedTimeOut = 0; //1000;
            toastr.options.timeOut = timeout;
            toastr.options.closeButton = closable;
            toastr.options.iconClass = icon + ' toast-' + theme;
            toastr['custom'](message);
        }
       
        function DeleteClient(ClientID, ClientTitle) {
            $('.page-sidebar').css('z-index', '0');
            $('.navbar').css('z-index', '200');
            bootbox.confirm({
                title: "Delete",
                message: "Are you sure to delete the client '" + ClientTitle + "'?",
                buttons: {
                    cancel: {
                        label: '<i class="fa fa-times"></i> Cancel'
                    },
                    confirm: {
                        label: '<i class="fa fa-check"></i> Confirm'
                    }
                }, callback: function (result) {
                    if (result) {
                        $.ajax({
                            type: 'DELETE',
                            url: '/Administration/DeleteClientByID',
                            data: { clientID: ClientID },
                            dataType: 'json',
                            success: function (data, statusText, resObject) {
                                

                                if (String(data) == "Client is deleted successfully") {
                                    //Notify("Client '" + ClientTitle + "' has been deleted successfully", 'top-right', '3000', 'success', 'fa-check', true);
                                    SuccessMessage("Client '" + ClientTitle + "' has been deleted successfully.");
                                    //LoadGrid();
                                    GetAllMasterClients();
                                    $('#tblClient_wrapper .dataTables_paginate li').removeClass('active');
                                    var lastPage = $('#tblClient_wrapper .dataTables_paginate li').length;
                                    lastPage = parseInt(lastPage) - parseInt(2);
                                    $('#tblClient_wrapper .dataTables_paginate li').eq(lastPage).addClass('active').click();
                                    
                                  
                                }
                                else {
                                    Notify(String(data), 'top-right', '3000', 'warning', 'fa-warning', true);
                                }
                            },
                            complete: function () {
                                window.location.reload();
                            },
                            error: function (jqXHR, exception) {
                                var msg = '';
                                if (jqXHR.status === 0) {
                                    msg = 'Not connect.\n Verify Network.';
                                } else if (jqXHR.status == 404) {
                                    msg = 'Requested page not found. [404]';
                                } else if (jqXHR.status == 500) {
                                    msg = 'Internal Server Error [500].';
                                } else if (exception === 'parsererror') {
                                    msg = 'Requested JSON parse failed.';
                                } else if (exception === 'timeout') {
                                    msg = 'Time out error.';
                                } else if (exception === 'abort') {
                                    msg = 'Ajax request aborted.';
                                } else {
                                    msg = 'Uncaught Error.\n' + jqXHR.responseText;
                                }
                                Notify(msg, 'top-right', '3000', 'warning', 'fa-warning', true);
                            }
                        });
                    }
                    else {
                    }
                }
            });
        }
        

    </script>*@
    
</environment>